{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(npm run dev:*)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(npx vercel:*)",
      "Bash(cmd:*)",
      "Bash(npx surge:*)",
      "WebFetch(domain:isai-7uxy.onrender.com)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "WebFetch(domain:isai-hub.vercel.app)",
      "Bash(rm:*)",
      "WebFetch(domain:ofirwie.github.io)",
      "Bash(npm run preview:*)",
      "Bash(git remote get-url:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(python:*)",
      "Bash(npm run deploy:*)",
      "Bash(npm run:*)",
      "Bash(vercel:*)",
      "Bash(tar:*)",
      "Bash(cd F:/git/ai-knowledge-hub-fresh)",
      "Bash(git add .)",
      "Bash(git commit -m \"Increase MarkdownDebugger content preview length and height\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nFix h3 header display by cleaning formatting before HTML conversion\n\nISSUE IDENTIFIED: Headers contained nested HTML like <h3><strong>text</strong></h3>\n- Added step to clean **bold**, __bold__, *italic*, _italic_, `code` from headers BEFORE converting to HTML\n- This prevents nested HTML tags that break header display\n- Headers now render as clean <h3>text</h3> instead of <h3><strong>text</strong></h3>\n- Updated step numbering to accommodate new processing step\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"Add debug logging to see real article content\")",
      "Bash(git commit -m \"Add debug to see all h3 patterns in content\")",
      "Bash(find:*)",
      "Bash(npm install:*)",
      "Bash(VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imlsb3Rjd3RjbmxpaG9wcnhjZHpwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI5NjEyODEsImV4cCI6MjA2ODUzNzI4MX0.aCNESZNvoz_vL_lHT68NyExTjYmaw9Z5YJ_6rtcKaZk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(''https://ilotcwtcnlihoprxcdzp.supabase.co'', process.env.VITE_SUPABASE_ANON_KEY);\n\n(async () => {\n  console.log(''Checking database content...'');\n  \n  // Check articles\n  const { data: articles, error: articlesError } = await supabase\n    .from(''articles'')\n    .select(''id, title, featured_image, excerpt'')\n    .limit(5);\n  \n  console.log(''Articles count:'', articles?.length || 0);\n  if (articlesError) console.error(''Articles error:'', articlesError);\n  \n  // Check prompts\n  const { data: prompts, error: promptsError } = await supabase\n    .from(''content'')\n    .select(''id, title, content_type, is_published'')\n    .eq(''content_type'', ''prompt'');\n  \n  console.log(''Total prompts:'', prompts?.length || 0);\n  console.log(''Published prompts:'', prompts?.filter(p => p.is_published).length || 0);\n  if (promptsError) console.error(''Prompts error:'', promptsError);\n})();\n\")",
      "Bash(mv:*)",
      "Bash(ren:*)"
    ],
    "deny": []
  }
}